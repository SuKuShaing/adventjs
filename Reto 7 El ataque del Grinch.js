/*
Â¡El grinch ðŸ‘¹ ha pasado por el taller de Santa Claus! Y menudo desastre ha montado. Ha cambiado el orden de algunos paquetes, por lo que los envÃ­os no se pueden realizar.

Por suerte, el elfo Pheralb ha detectado el patrÃ³n que ha seguido el grinch para desordenarlos. Nos ha escrito las reglas que debemos seguir para reordenar los paquetes. Las instrucciones que siguen son:

RecibirÃ¡s un string que contiene letras y parÃ©ntesis.
Cada vez que encuentres un par de parÃ©ntesis, debes voltear el contenido dentro de ellos.
Si hay parÃ©ntesis anidados, resuelve primero los mÃ¡s internos.
Devuelve el string resultante con los parÃ©ntesis eliminados, pero con el contenido volteado correctamente.
Nos ha dejado algunos ejemplos:

fixPackages('a(cb)de')
// âžž "abcde"
// Volteamos "cb" dentro de los parÃ©ntesis

fixPackages('a(bc(def)g)h')
// âžž "agdefcbh"
// 1Âº volteamos "def" â†’ "fed", luego volteamos "bcfedg" â†’ "gdefcb"

fixPackages('abc(def(gh)i)jk')
// âžž "abcighfedjk"
// 1Âº volteamos "gh" â†’ "hg", luego "defhgi" â†’ "ighfed"

fixPackages('a(b(c))e')
// âžž "acbe"
// 1Âº volteamos "c" â†’ "c", luego "bc" â†’ "cb"
*/

function fixPackages(packages) {
	while (packages.includes("(")) {
		console.log(packages);

		// encontrar el Ãºltimo parÃ©ntesis "(" con un lastIndexOf
		const parentesisAbierto = packages.lastIndexOf("(");

		// encontrar el primer parÃ©ntesis ")" despuÃ©s del Ãºltimo "("
		const parentesisCerrado = packages.indexOf(")", parentesisAbierto);
		// console.log({ parentesisAbierto, parentesisCerrado });

		// letras entre medio
		const letras = packages.slice(parentesisAbierto + 1, parentesisCerrado);
		// console.log(letras);

		// voltear las letras
		const volteado = voltearTexto(letras);
		// console.log(volteado);

		// reemplazar las letras volteadas en el string original
		const resultado = packages.replace(letras, volteado);
		// eliminar la posiciÃ³n del parÃ©ntesisCerrado
		packages = resultado.slice(0, parentesisCerrado) + resultado.slice(parentesisCerrado + 1);
		// eliminar la posiciÃ³n del parÃ©ntesisAbierto
		packages = packages.slice(0, parentesisAbierto) + packages.slice(parentesisAbierto + 1);

	}
    console.log(packages);
    return packages;
}

function voltearTexto(texto) {
	return texto.split("").reverse().join("");
}

fixPackages('a(cb)de')
// âžž "abcde"
// Volteamos "cb" dentro de los parÃ©ntesis

fixPackages('a(bc(def)g)h')
// âžž "agdefcbh"
// 1Âº volteamos "def" â†’ "fed", luego volteamos "bcfedg" â†’ "gdefcb"

fixPackages('abc(def(gh)i)jk')
// âžž "abcighfedjk"
// 1Âº volteamos "gh" â†’ "hg", luego "defhgi" â†’ "ighfed"

fixPackages('a(b(c))e')
// âžž "acbe"
// 1Âº volteamos "c" â†’ "c", luego "bc" â†’ "cb"